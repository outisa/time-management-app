name: CI pipeline on push
on:
  push:
    branches:
      - main
jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '16.x'
        mongodb-version: '4.4'
    - name: ci
      run: npm ci
    - name: lint
      run: npm run lint
    - name: build
      run: npm run build
    - name: Start backend in test mode
      run: cd ../backend && npm ci && nohup npm run start:test &
      env:
        SECRET: ${{secrets.SECRET}}
        PORT: 3001
        MONGODB_URI_TEST: ${{secrets.MONGODB_URI_TEST}}
    - name: Run Cypress tests
      uses: cypress-io/github-action@v2
      with:
        start: npm start
        working-directory: frontend
        wait-on: http://localhost:3000
        wait-on-timeout: 300

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: ci
      run: npm ci
    - name: lint
      run: npm run lint
    - name: Run tests
      run: npm run test
      env:
        SECRET: ${{ secrets.SECRET }}
        PORT: 3001
        MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
  build:
    name: 'Publish'
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          docker_build_args: |
            MONGODB_ARG
            SECRET_ARG
        env:
          MONGODB_ARG: ${{ secrets.MONGODB_URI_PROD }}
          SECRET_ARG: ${{ secrets.SECRET }}

